如果数组是单调递增或单调递减的，那么它是单调的。

如果对于所有 i <= j，A[i] <= A[j]，那么数组 A 是单调递增的。 如果对于所有 i <= j，A[i]> = A[j]，那么数组 A 是单调递减的。

当给定的数组 A 是单调数组时返回 true，否则返回 false。


public:
    bool isMonotonic(vector<int>& A) 
    {                                           //两次遍历 
        int flag=0;
        for(int i=0;i<A.size()-1;i++)
        {
            if(A[i+1]>=A[i]) flag++;
        }
        if(flag==A.size()-1) return true;       //是否为递增
        else
        {
            flag=0;
            for(int i=0;i<A.size()-1;i++)
            {
                if(A[i+1]<=A[i]) flag++;
            }
            if(flag==A.size()-1) return true;   //是否为递减
        }
        return false; 
    }


public:
    bool isMonotonic(vector<int>& A) 
    {
        int flag = 0;
        for(int i = 0; i < A.size() - 1; i++)
        {
            int num = A[i+1] - A[i];                        //作差记为标识符
            if(flag == 0) flag = num;
            else 
            {
                if(flag > 0 && num < 0)  return false;      //如果num小于0 而flag大于0 则前面一个为增后面一个为减
                else 
                {
                    if(flag < 0 && num > 0) return false;   //同上相反
                }
            }
        }
        return true;
    }


public:
    bool isMonotonic(vector<int>& A) 
    {
        int c1=1,c2=1;
        for(int i=0;i<A.size()-1;i++)
        {
            c1 &= A[i]<=A[i+1];		//神仙代码 挖坑
            c2 &= A[i]>=A[i+1];
        }
        return c1 | c2;
    }
