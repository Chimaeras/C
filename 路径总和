## 路径总和
### 题目：给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和。

* 示例:
给定如下二叉树，以及目标和 sum = 22，

              5  
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
    返回 true, 因为存在目标和为 22 的根节点到叶子节点的路径 5->4->11->2。
---

* #### 解法：
```
public:
    bool hasPathSum(TreeNode* root, int sum) {
        if(!root) return false;//判断初始条件:根节点是否为空
        if(!root->left&&!root->right&&root->val==sum) return true;//根节点是否刚好等于目标值
        else if(!root->left&&!root->right&&root->val!=sum) return false;//到达了叶子节点 判断是否等于目标值
        else return hasPathSum(root->left,sum-root->val)||hasPathSum(root->right,sum-root->val);//递归调用
        return false;
    }
```
#### 分析：
* 1.分析初始条件
* 2.判断当前条件是否符合要求
* 3.不符合则将问题规模缩小，递归调用
---
